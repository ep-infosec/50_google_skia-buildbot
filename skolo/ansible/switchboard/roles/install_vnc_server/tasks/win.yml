- name: Create Temp
  win_file:
    path: C:\Temp
    state: directory

- name: Copy the UltraVNC installer
  win_copy:
    src: '{{ win_package_src }}/UltraVNC_1_3_80_X64_Setup.exe'
    dest: C:\Temp\ultravnc.exe

# This file was generated by running the installer with flag /saveinf="C:\silentinstall.inf", which
# captures the installation settings chosen by the user in the installation wizard. This is a
# default installation, except that the VNC viewer and VNC repeater are opted out.
- name: Copy silentinstall.inf
  win_copy:
    src: files/silentinstall.inf
    dest: C:\Temp\silentinstall.inf

- name: Check if an existing UltraVNC service exists
  ansible.windows.win_service_info:
    name: uvnc_service
  register: uvnc_service

- name: Stop existing UltraVNC service if found
  win_service:
    name: uvnc_service
    state: stopped
  when: uvnc_service.exists

# An existing installation might prevent a subsequent installation from succeeding.
- name: Check if there is an existing UltraVNC installation
  win_stat:
    path: C:\Program Files\uvnc bvba\UltraVNC\unins000.exe
  register: uninstaller

- name: Uninstall existing UltraVNC installation (might trigger a reboot)
  win_command: unins000.exe /verysilent
  args:
    chdir: C:\Program Files\uvnc bvba\UltraVNC
  when: uninstaller.stat.exists

- name:
    Wait for potential reboot after uninstalling existing UltraVNC installation
  wait_for_connection:
    delay: 10
    timeout: 60
  when: uninstaller.stat.exists

- name: Install UltraVNC (might trigger a reboot)
  win_package:
    path: C:\Temp\ultravnc.exe
    # https://adamtheautomator.com/ultravnc-silent-install
    arguments: /verysilent /loadinf="C:\Temp\silentinstall.inf"
    state: present
  ignore_errors: true

# For some reason, stopping uvnc_service sometimes causes the machine to reboot. We force a
# reboot now to make this role less flaky.
- name: Reboot host
  win_reboot:

- name: Stop UltraVNC service prior to overwriting ultravnc.ini
  win_service:
    name: uvnc_service
    state: stopped

# See encrypt_ultravnc_password for rationale and details.
- name: Encrypt UltraVNC password
  delegate_to: 127.0.0.1
  command:
    argv:
      - bazelisk
      - run
      - //skolo/go/encrypt_ultravnc_password
      - --
      - '{{ secrets.skolo_password }}'
  register: encrypted_ultravnc_password

# This base ultravnc.ini file resulted from manually configuring UltraVNC via its UI on a Skolo
# Windows machine.
- name: Overwrite ultravnc.ini
  win_template:
    src: templates/ultravnc.ini
    dest: C:\Program Files\uvnc bvba\UltraVNC\ultravnc.ini

- name: Restart UltraVNC service to pick up new password
  win_service:
    name: uvnc_service
    state: started

- name: Cleanup UltraVNC installer
  win_file:
    path: C:\Temp\ultravnc.exe
    state: absent

- name: Cleanup silentinstall.inf
  win_file:
    path: C:\Temp\silentinstall.inf
    state: absent
