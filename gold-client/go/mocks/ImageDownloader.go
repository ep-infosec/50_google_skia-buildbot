// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	testing "testing"

	types "go.skia.org/infra/golden/go/types"
)

// ImageDownloader is an autogenerated mock type for the ImageDownloader type
type ImageDownloader struct {
	mock.Mock
}

// DownloadImage provides a mock function with given fields: ctx, goldURL, digest
func (_m *ImageDownloader) DownloadImage(ctx context.Context, goldURL string, digest types.Digest) ([]byte, error) {
	ret := _m.Called(ctx, goldURL, digest)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, string, types.Digest) []byte); ok {
		r0 = rf(ctx, goldURL, digest)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, types.Digest) error); ok {
		r1 = rf(ctx, goldURL, digest)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewImageDownloader creates a new instance of ImageDownloader. It also registers a cleanup function to assert the mocks expectations.
func NewImageDownloader(t testing.TB) *ImageDownloader {
	mock := &ImageDownloader{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
