load("//infra-sk:index.bzl", "bool_flag", "extract_files_from_skia_wasm_container")

bool_flag(
    default = True,
    flag_name = "use_canvaskit_from_container",
)

# This target makes the canvaskit js and wasm binaries available for tests. This is not the same
# as ../build because we want to be able to control which binaries get used when we deploy a
# container, but we are less stringent when running tests on the infra CI.
extract_files_from_skia_wasm_container(
    name = "canvaskit_wasm",
    testonly = True,
    outs = [
        "from_container/canvaskit.js",
        "from_container/canvaskit.wasm",
    ],
    container_files = [
        "/tmp/canvaskit/canvaskit.js",
        "/tmp/canvaskit/canvaskit.wasm",
    ],
    enabled_flag = ":use_canvaskit_from_container",
    visibility = ["//particles:__subpackages__"],
)

filegroup(
    name = "canvaskit.js",
    srcs = select({
        ":use_canvaskit_from_container_true": ["from_container/canvaskit.js"],
        ":use_canvaskit_from_container_false": ["local_build/canvaskit.js"],
    }),
    visibility = ["//particles:__subpackages__"],
)

filegroup(
    name = "canvaskit.wasm",
    srcs = select({
        ":use_canvaskit_from_container_true": ["from_container/canvaskit.wasm"],
        ":use_canvaskit_from_container_false": ["local_build/canvaskit.wasm"],
    }),
    visibility = ["//particles:__subpackages__"],
)

genrule(
    name = "make version file",
    outs = ["version.js"],
    # We use LATEST here to make Puppeteer tests more deterministic.
    cmd = """echo "const SKIA_VERSION = 'LATEST';" > $@""",
    visibility = ["//particles:__subpackages__"],
)
